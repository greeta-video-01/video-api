server:
  shutdown: graceful
  forward-headers-strategy: framework
  tomcat:
    connection-timeout: 2s
    keep-alive-timeout: 15s
    threads:
      max: 50
      min-spare: 5

spring:
  application:
    name: video
  lifecycle:
    timeout-per-shutdown-phase: 15s

  redis:
    host: video-redis
    port: 6370

  servlet:
    multipart:
      max-file-size: 100MB
      max-request-size: 100MB

  datasource:
    url: jdbc:postgresql://video-db:5433/spring-video
    username: postgres
    password: pa55ward
    driver-class-name: org.postgresql.Driver
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        hbm2ddl:
          auto: update
    open-in-view: false


  keycloak:
    server-url: http://localhost:8080
    server-external-url: http://localhost:8080
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${spring.keycloak.server-external-url}/realms/video-realm
          jwk-set-uri: ${spring.keycloak.server-url}/realms/video-realm/protocol/openid-connect/certs

logging:
  pattern:
    level: "%5p [${spring.application.name},%X{trace_id},%X{span_id}]"
    console: "%d{yyyy-MM-dd HH:mm:ss} ${LOG_LEVEL_PATTERN:-%5p} %m%n"
  level:
    net.greeta.video: DEBUG
    org.springframework.cloud.kubernetes: TRACE
    org.springframework.security: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE

info:
  system: Video Service

jwt:
  auth:
    converter:
      resource-id: video-app
      principal-attribute: preferred_username

management:
  endpoints:
    web:
      exposure:
        include: bindings, configprops, env, flyway, functions, health, heapdump, info, loggers, mappings, prometheus
  endpoint:
    health:
      show-details: always
      show-components: always
      probes:
        enabled: true
  tracing:
    sampling:
      probability: 1.0
  zipkin:
    tracing:
      endpoint: http://${ZIPKIN_HOST:localhost}:${ZIPKIN_PORT:9411}/api/v2/spans
  info:
    env:
      enabled: true
    java:
      enabled: true
    os:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}


openapi:
  oauthflow:
    authServerUrl: ${spring.keycloak.server-external-url}
    realm: video-realm

# kafka related settings
kafka:
  bootstrapServers: localhost:9092


# minio related settings
minio:
  access-key: minio
  secret-key: pa55ward
  url: http://video-minio:9001
  bucket:
    store: video
    stream: stream